// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tellist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tellist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ikurento {
namespace hi {
class hi_tel_num_listDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<hi_tel_num_list>
     _instance;
} _hi_tel_num_list_default_instance_;

namespace protobuf_tellist_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hi_tel_num_list, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hi_tel_num_list, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hi_tel_num_list, tel_num_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(hi_tel_num_list)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_hi_tel_num_list_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tellist.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _hi_tel_num_list_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_hi_tel_num_list_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rtellist.proto\022\013ikurento.hi\"\"\n\017hi_tel_n"
      "um_list\022\017\n\007tel_num\030\001 \003(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 64);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tellist.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tellist_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int hi_tel_num_list::kTelNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

hi_tel_num_list::hi_tel_num_list()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tellist_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ikurento.hi.hi_tel_num_list)
}
hi_tel_num_list::hi_tel_num_list(const hi_tel_num_list& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tel_num_(from.tel_num_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ikurento.hi.hi_tel_num_list)
}

void hi_tel_num_list::SharedCtor() {
  _cached_size_ = 0;
}

hi_tel_num_list::~hi_tel_num_list() {
  // @@protoc_insertion_point(destructor:ikurento.hi.hi_tel_num_list)
  SharedDtor();
}

void hi_tel_num_list::SharedDtor() {
}

void hi_tel_num_list::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hi_tel_num_list::descriptor() {
  protobuf_tellist_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tellist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const hi_tel_num_list& hi_tel_num_list::default_instance() {
  protobuf_tellist_2eproto::InitDefaults();
  return *internal_default_instance();
}

hi_tel_num_list* hi_tel_num_list::New(::google::protobuf::Arena* arena) const {
  hi_tel_num_list* n = new hi_tel_num_list;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void hi_tel_num_list::Clear() {
// @@protoc_insertion_point(message_clear_start:ikurento.hi.hi_tel_num_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tel_num_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool hi_tel_num_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ikurento.hi.hi_tel_num_list)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 tel_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_tel_num())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_tel_num())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ikurento.hi.hi_tel_num_list)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ikurento.hi.hi_tel_num_list)
  return false;
#undef DO_
}

void hi_tel_num_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ikurento.hi.hi_tel_num_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 tel_num = 1;
  for (int i = 0, n = this->tel_num_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->tel_num(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ikurento.hi.hi_tel_num_list)
}

::google::protobuf::uint8* hi_tel_num_list::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ikurento.hi.hi_tel_num_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 tel_num = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->tel_num_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ikurento.hi.hi_tel_num_list)
  return target;
}

size_t hi_tel_num_list::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ikurento.hi.hi_tel_num_list)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 tel_num = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->tel_num_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tel_num_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hi_tel_num_list::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ikurento.hi.hi_tel_num_list)
  GOOGLE_DCHECK_NE(&from, this);
  const hi_tel_num_list* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const hi_tel_num_list>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ikurento.hi.hi_tel_num_list)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ikurento.hi.hi_tel_num_list)
    MergeFrom(*source);
  }
}

void hi_tel_num_list::MergeFrom(const hi_tel_num_list& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ikurento.hi.hi_tel_num_list)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tel_num_.MergeFrom(from.tel_num_);
}

void hi_tel_num_list::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ikurento.hi.hi_tel_num_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hi_tel_num_list::CopyFrom(const hi_tel_num_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ikurento.hi.hi_tel_num_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hi_tel_num_list::IsInitialized() const {
  return true;
}

void hi_tel_num_list::Swap(hi_tel_num_list* other) {
  if (other == this) return;
  InternalSwap(other);
}
void hi_tel_num_list::InternalSwap(hi_tel_num_list* other) {
  using std::swap;
  tel_num_.InternalSwap(&other->tel_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata hi_tel_num_list::GetMetadata() const {
  protobuf_tellist_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tellist_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// hi_tel_num_list

// repeated uint64 tel_num = 1;
int hi_tel_num_list::tel_num_size() const {
  return tel_num_.size();
}
void hi_tel_num_list::clear_tel_num() {
  tel_num_.Clear();
}
::google::protobuf::uint64 hi_tel_num_list::tel_num(int index) const {
  // @@protoc_insertion_point(field_get:ikurento.hi.hi_tel_num_list.tel_num)
  return tel_num_.Get(index);
}
void hi_tel_num_list::set_tel_num(int index, ::google::protobuf::uint64 value) {
  tel_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:ikurento.hi.hi_tel_num_list.tel_num)
}
void hi_tel_num_list::add_tel_num(::google::protobuf::uint64 value) {
  tel_num_.Add(value);
  // @@protoc_insertion_point(field_add:ikurento.hi.hi_tel_num_list.tel_num)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
hi_tel_num_list::tel_num() const {
  // @@protoc_insertion_point(field_list:ikurento.hi.hi_tel_num_list.tel_num)
  return tel_num_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
hi_tel_num_list::mutable_tel_num() {
  // @@protoc_insertion_point(field_mutable_list:ikurento.hi.hi_tel_num_list.tel_num)
  return &tel_num_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hi
}  // namespace ikurento

// @@protoc_insertion_point(global_scope)
