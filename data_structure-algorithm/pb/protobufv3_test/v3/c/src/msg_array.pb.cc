// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_array.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_array.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto3_proto_example {
class MessageArray_MsgMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MessageArray::MessageArray_MsgMapEntry>
     _instance;
} _MessageArray_MsgMapEntry_default_instance_;
class MessageArrayDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MessageArray>
     _instance;
} _MessageArray_default_instance_;

namespace protobuf_msg_5farray_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageArray, msg_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MessageArray)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageArray_MsgMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageArray_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "msg_array.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = MessageArray::MessageArray_MsgMapEntry::CreateReflection(file_level_metadata[0].descriptor, _MessageArray_MsgMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto3_proto::protobuf_msg_2eproto::InitDefaults();
  _MessageArray_MsgMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MessageArray_MsgMapEntry_default_instance_);_MessageArray_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MessageArray_default_instance_);_MessageArray_MsgMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_MessageArray_MsgMapEntry_default_instance_._instance.get_mutable());
  _MessageArray_MsgMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017msg_array.proto\022\024proto3_proto_example\032"
      "\tmsg.proto\"\225\001\n\014MessageArray\022\?\n\007msg_map\030\001"
      " \003(\0132..proto3_proto_example.MessageArray"
      ".MsgMapEntry\032D\n\013MsgMapEntry\022\013\n\003key\030\001 \001(\t"
      "\022$\n\005value\030\002 \001(\0132\025.proto3_proto.Message:\002"
      "8\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 210);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_array.proto", &protobuf_RegisterTypes);
  ::proto3_proto::protobuf_msg_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_msg_5farray_2eproto


// ===================================================================

MessageArray::MessageArray_MsgMapEntry::MessageArray_MsgMapEntry() {}
MessageArray::MessageArray_MsgMapEntry::MessageArray_MsgMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MessageArray::MessageArray_MsgMapEntry::GetMetadata() const {
  protobuf_msg_5farray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_5farray_2eproto::file_level_metadata[0];
}
void MessageArray::MessageArray_MsgMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MessageArray::MessageArray_MsgMapEntry::MergeFrom(const MessageArray_MsgMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageArray::kMsgMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageArray::MessageArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msg_5farray_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto3_proto_example.MessageArray)
}
MessageArray::MessageArray(const MessageArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_map_.MergeFrom(from.msg_map_);
  // @@protoc_insertion_point(copy_constructor:proto3_proto_example.MessageArray)
}

void MessageArray::SharedCtor() {
  _cached_size_ = 0;
}

MessageArray::~MessageArray() {
  // @@protoc_insertion_point(destructor:proto3_proto_example.MessageArray)
  SharedDtor();
}

void MessageArray::SharedDtor() {
}

void MessageArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageArray::descriptor() {
  protobuf_msg_5farray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_5farray_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageArray& MessageArray::default_instance() {
  protobuf_msg_5farray_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageArray* MessageArray::New(::google::protobuf::Arena* arena) const {
  MessageArray* n = new MessageArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageArray::Clear() {
// @@protoc_insertion_point(message_clear_start:proto3_proto_example.MessageArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_map_.Clear();
  _internal_metadata_.Clear();
}

bool MessageArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto3_proto_example.MessageArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .proto3_proto.Message> msg_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MessageArray_MsgMapEntry::Parser< ::google::protobuf::internal::MapField<
              MessageArray_MsgMapEntry,
              ::std::string, ::proto3_proto::Message,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::proto3_proto::Message > > parser(&msg_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto3_proto_example.MessageArray.MsgMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto3_proto_example.MessageArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto3_proto_example.MessageArray)
  return false;
#undef DO_
}

void MessageArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto3_proto_example.MessageArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .proto3_proto.Message> msg_map = 1;
  if (!this->msg_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto3_proto_example.MessageArray.MsgMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->msg_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->msg_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_iterator
          it = this->msg_map().begin();
          it != this->msg_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MessageArray_MsgMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(msg_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MessageArray_MsgMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_iterator
          it = this->msg_map().begin();
          it != this->msg_map().end(); ++it) {
        entry.reset(msg_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto3_proto_example.MessageArray)
}

::google::protobuf::uint8* MessageArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto3_proto_example.MessageArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .proto3_proto.Message> msg_map = 1;
  if (!this->msg_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto3_proto_example.MessageArray.MsgMapEntry.key");
      }
    };

    if (deterministic &&
        this->msg_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->msg_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_iterator
          it = this->msg_map().begin();
          it != this->msg_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MessageArray_MsgMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(msg_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MessageArray_MsgMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_iterator
          it = this->msg_map().begin();
          it != this->msg_map().end(); ++it) {
        entry.reset(msg_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto3_proto_example.MessageArray)
  return target;
}

size_t MessageArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto3_proto_example.MessageArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .proto3_proto.Message> msg_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->msg_map_size());
  {
    ::google::protobuf::scoped_ptr<MessageArray_MsgMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::proto3_proto::Message >::const_iterator
        it = this->msg_map().begin();
        it != this->msg_map().end(); ++it) {
      entry.reset(msg_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto3_proto_example.MessageArray)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto3_proto_example.MessageArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto3_proto_example.MessageArray)
    MergeFrom(*source);
  }
}

void MessageArray::MergeFrom(const MessageArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto3_proto_example.MessageArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_map_.MergeFrom(from.msg_map_);
}

void MessageArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto3_proto_example.MessageArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageArray::CopyFrom(const MessageArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto3_proto_example.MessageArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageArray::IsInitialized() const {
  return true;
}

void MessageArray::Swap(MessageArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageArray::InternalSwap(MessageArray* other) {
  using std::swap;
  msg_map_.Swap(&other->msg_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageArray::GetMetadata() const {
  protobuf_msg_5farray_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_5farray_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageArray

// map<string, .proto3_proto.Message> msg_map = 1;
int MessageArray::msg_map_size() const {
  return msg_map_.size();
}
void MessageArray::clear_msg_map() {
  msg_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >&
MessageArray::msg_map() const {
  // @@protoc_insertion_point(field_map:proto3_proto_example.MessageArray.msg_map)
  return msg_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::proto3_proto::Message >*
MessageArray::mutable_msg_map() {
  // @@protoc_insertion_point(field_mutable_map:proto3_proto_example.MessageArray.msg_map)
  return msg_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto3_proto_example

// @@protoc_insertion_point(global_scope)
